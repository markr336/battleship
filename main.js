/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/style.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/style.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\nbody {\n  background-color: rgb(10, 10, 26);\n}\n\nheader {\n  text-align: center;\n}\n\nh1  {\n  font-family: \"Sixtyfour Convergence\", serif;\n  font-optical-sizing: auto;\n  font-weight: 400;\n  font-style: normal;\n  font-variation-settings:\n    \"BLED\" 0,\n    \"SCAN\" 0,\n    \"XELA\" 0,\n    \"YELA\" 0;\n  text-align: center;\n  font-size: 60px;\n}\n\n\n/* Form */\n\n.formContainer {\n  height: 70vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.form {\n  width: 200px;\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.player2Checkbox label {\n  color: white;\n}\n\n.names {\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n}\n\n.names input {\n  background: none;\n  font-size: 30px;\n  border: none;\n  outline: none;\n}\n\ninput[name='player2ToPlay'] {\n  width: 16px;\n}\n\n#player1Name {\n  color: rgb(0, 110, 255);\n  border-bottom: 1px solid rgb(0, 110, 255);\n}\n\n#player2Name {\n  color: orange;\n  border-bottom: 1px solid orange;\n}\n\nlabel[for='player2ToPlay'] {\n  font-size: 20px;\n}\n\n.player2Checkbox,\n.submitNamesContainer {\n  display: flex;\n  justify-content: center;\n}\n\nbutton {\n  margin-top: 20px;\n  width: 200px;\n  font-size: 30px;\n  background: none;\n  color: white;\n  border: 5px solid white;\n  border-radius: 15px;\n}\n\n.orientation {\n  margin-top: 0;\n}\n\nbutton:hover {\n  color: red;\n  border: 5px solid red;\n}\n\n/* Boards */\n\n.player1Name {\n  color: rgb(0, 110, 255);\n  font-size: 30px;\n  text-align: center;\n}\n\n.player2Name {\n  color: orange;\n  font-size: 30px;\n  text-align: center;\n}\n\n.gameArea {\n  display: flex;\n  justify-content: center;\n  gap: 100px;\n}\n\n.textArea {\n  /* margin-top: 20px; */\n  display: flex;\n  flex-direction: column;\n  /* justify-content: center; */\n  align-items: center;\n  color: white;\n  font-size: 25px;\n}\n\n.player1Board,\n.player1BoardState,\n.player2Board,\n.player2BoardState {\n  display: grid;\n  grid-template-columns: repeat(10, 50px); \n  grid-template-rows: repeat(10, 50px); \n}\n\n.player1Area,\n.player2Area {\n  display: flex;\n  justify-content: center;\n  gap: 100px\n}\n\n.cell {\n  width: 50px;\n  height: 50px;\n  border: 2px solid gray;\n  color: white;\n  font-size: 40px;\n  text-align: center;\n  line-height: 50px;\n}\n\n.miss {\n  color: white;\n}\n\n.hit {\n  color: red;\n}\n\n.ship div {\n  width: 50px;\n  height: 50px;\n  color: #ff4a96;\n}\n\n.player2Board .ship div {\n  color: #ff4800;\n}\n\n.shipyard {\n  margin-top: 150px;\n  width: 500px;\n  /* height: 500px; */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 50px;\n}\n\n.player1Area .ship {\n  background-color: blue;\n  opacity: 0.4; \n  z-index: 1; \n  display: inline-block;\n}\n\n.player2Area .ship {\n  background-color: orange;\n  opacity: 0.4; \n  z-index: 1; \n  display: inline-block;\n}\n\n#patrolBoat1.horizontal,\n#patrolBoat2.horizontal {\n  width: 100px;\n  height: 50px;\n}\n\n#destroyer1.horizontal,\n#destroyer2.horizontal {\n  width: 150px;\n  height: 50px;\n}\n\n#battleship1.horizontal,\n#battleship2.horizontal {\n  width: 200px;\n  height: 50px;\n}\n\n#carrier1.horizontal,\n#carrier2.horizontal {\n  width: 250px;\n  height: 50px;\n}\n\n#patrolBoat1.vertical,\n#patrolBoat2.vertical {\n  width: 50px;\n  height: 100px;\n}\n\n#destroyer1.vertical, \n#destroyer2.vertical {\n  width: 50px;\n  height: 150px;\n}\n\n#battleship1.vertical,\n#battleship2.vertical {\n  width: 50px;\n  height: 200px;\n}\n\n#carrier1.vertical,\n#carrier2.vertical {\n  width: 50px;\n  height: 250px;\n}\n\n.moveAllowed {\n  background-color: green;\n}\n\n.moveNotAllowed {\n  background-color: red;\n}\n\n\n\n/* Gameboard */\n.playerNames,\n.gameboard,\n.row {\n  display: flex;\n}\n\n.playerNames,\n.gameboard {\n  justify-content: space-around;\n}\n\n.playerNames {\n  font-size: 50px;\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://modulestemplate/./src/style.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://modulestemplate/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://modulestemplate/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./src/style.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://modulestemplate/./src/style.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://modulestemplate/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://modulestemplate/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://modulestemplate/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://modulestemplate/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://modulestemplate/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://modulestemplate/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/form.js":
/*!*********************!*\
  !*** ./src/form.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadForm: () => (/* binding */ loadForm),\n/* harmony export */   togglePlayer2: () => (/* binding */ togglePlayer2)\n/* harmony export */ });\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player */ \"./src/player.js\");\n\n\nfunction loadForm() {\n    const player2NameInput = document.getElementById('player2Name')\n    player2NameInput.style.display = 'None'\n    const player2Box = document.getElementById('player2ToPlay')\n    player2Box.addEventListener('click', togglePlayer2)\n    \n    // const submitNamesButton = document.querySelector('#submitNames')\n    // submitNamesButton.addEventListener('click', (e) => {\n    //   // Prevent page from reloading & not calling function\n    //   e.preventDefault()\n    //   submitNames()\n    // })\n    \n}\n\nfunction togglePlayer2() {\n    const player2Checkbox = document.getElementById('player2ToPlay')\n    if (player2Checkbox.checked == true) {\n      document.getElementById('player2Name').style.display = ''\n    }\n    else {\n      document.getElementById('player2Name').style.display = 'None'\n    }\n}\n\n// export function submitNames() {\n//   let player1name = document.getElementById('player1Name').value\n//   const player1 = new Player(player1name, 'Real')\n//   let player2name = document.getElementById('player2Name').value\n\n//   console.log(player1)\n//   if (player2name == '') {\n//     const player2 = new Player('Computer', 'Fake')\n//     console.log(player2)\n//   }\n//   else {\n//     const player2 = new Player(player2name, 'Real')\n//     console.log(player2)\n//   }\n//   document.querySelector('.form').style.display = 'None'\n// }\n\n//# sourceURL=webpack://modulestemplate/./src/form.js?");

/***/ }),

/***/ "./src/gameboard-UI.js":
/*!*****************************!*\
  !*** ./src/gameboard-UI.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendShipToCell: () => (/* binding */ appendShipToCell),\n/* harmony export */   axis: () => (/* binding */ axis),\n/* harmony export */   battleshipCells: () => (/* binding */ battleshipCells),\n/* harmony export */   carrierCells: () => (/* binding */ carrierCells),\n/* harmony export */   clearAllStorage: () => (/* binding */ clearAllStorage),\n/* harmony export */   createPlayer1Board: () => (/* binding */ createPlayer1Board),\n/* harmony export */   createPlayer1BoardState: () => (/* binding */ createPlayer1BoardState),\n/* harmony export */   createPlayer2Board: () => (/* binding */ createPlayer2Board),\n/* harmony export */   createPlayer2BoardState: () => (/* binding */ createPlayer2BoardState),\n/* harmony export */   destroyerCells: () => (/* binding */ destroyerCells),\n/* harmony export */   dropShipOnBoard: () => (/* binding */ dropShipOnBoard),\n/* harmony export */   getCoordinate: () => (/* binding */ getCoordinate),\n/* harmony export */   highlightAllowedPlacement: () => (/* binding */ highlightAllowedPlacement),\n/* harmony export */   highlightCells: () => (/* binding */ highlightCells),\n/* harmony export */   highlightNotAllowedPlacement: () => (/* binding */ highlightNotAllowedPlacement),\n/* harmony export */   patrolBoatCells: () => (/* binding */ patrolBoatCells),\n/* harmony export */   removeCellsFromStorage: () => (/* binding */ removeCellsFromStorage),\n/* harmony export */   resetOrientation: () => (/* binding */ resetOrientation),\n/* harmony export */   toggleHorizontalVertical: () => (/* binding */ toggleHorizontalVertical),\n/* harmony export */   unhighlightCells: () => (/* binding */ unhighlightCells)\n/* harmony export */ });\nlet axis = 'horizontal'\n\nconst patrolBoatCells = []\nconst destroyerCells = []\nconst battleshipCells = []\nconst carrierCells = []\n\nfunction createPlayer1Board() {\n    const player1Gameboard = document.querySelector('.player1Board')\n\n    for (let i = 0; i < 10; i++) {\n        for (let j = 0; j < 10; j++) {\n            const cell = document.createElement('div')\n            cell.classList.add(`cell${i}${j}`)\n            cell.classList.add('cell')\n            player1Gameboard.appendChild(cell)\n        }\n    }\n}\n\nfunction createPlayer1BoardState() {\n    const player2GameboardState = document.querySelector('.player1BoardState')\n\n    for (let i = 0; i < 10; i++) {\n        for (let j = 0; j < 10; j++) {\n            const cell = document.createElement('div')\n            cell.classList.add(`cell${i}${j}`)\n            cell.classList.add('cell')\n            player2GameboardState.appendChild(cell)\n        }\n    }\n}\n\nfunction createPlayer2Board() {\n    const player2Gameboard = document.querySelector('.player2Board')\n\n    for (let i = 0; i < 10; i++) {\n        for (let j = 0; j < 10; j++) {\n            const cell = document.createElement('div')\n            cell.classList.add(`cell${i}${j}`)\n            cell.classList.add('cell')\n            player2Gameboard.appendChild(cell)\n        }\n    }\n}\n\nfunction createPlayer2BoardState() {\n    const player2GameboardState = document.querySelector('.player2BoardState')\n\n    for (let i = 0; i < 10; i++) {\n        for (let j = 0; j < 10; j++) {\n            const cell = document.createElement('div')\n            cell.classList.add(`cell${i}${j}`)\n            cell.classList.add('cell')\n            player2GameboardState.appendChild(cell)\n        }\n    }\n}\n\nfunction appendShipToCell(cell, ship) {\n    cell.appendChild(ship); \n    ship.style.position = 'static'; \n    ship.style.top = '0'; \n    ship.style.left = '0'; \n}\n\nfunction getCoordinate(number) {\n    if (number < 10) {\n        return [0, number]\n    }\n    else {\n        return [Math.floor(number / 10), number % 10]\n    }\n} \n\nfunction removeCellsFromStorage(lengthOfShip) {\n\n    /// If condition where it only checks occupied cells of other ships & not own\n    // so that it get dropped back \n\n    if (patrolBoatCells.length != 0 && lengthOfShip == 2) {\n        // console.log('Clear patrol boat storage')\n        patrolBoatCells.splice(0, 2)\n    }\n    else if (destroyerCells.length != 0 && lengthOfShip == 3) {\n        // console.log('Clear destroyer storage')\n        destroyerCells.splice(0, 3)\n    }\n    else if (battleshipCells.length != 0 && lengthOfShip == 4) {\n        // console.log('Clear battleship storages')\n        battleshipCells.splice(0, 4)\n    }\n    else if (carrierCells.length != 0 && lengthOfShip == 5) {\n        // console.log('Clear carrier storage')\n        carrierCells.splice(0, 5)\n    }\n\n}\n\nfunction clearAllStorage() {\n    patrolBoatCells.splice(0, 2)\n    destroyerCells.splice(0, 3)\n    battleshipCells.splice(0, 4)\n    carrierCells.splice(0, 5)\n}\n\nfunction resetOrientation() {\n    axis = 'horizontal'\n    // console.log(axis)\n    ships.forEach(ship => {\n        if (ship.parentNode.classList[1] != 'cell') {\n            ship.classList.remove('vertical')\n            ship.classList.add('horizontal')\n        }\n    })\n    const shipyard = document.querySelector('.player2Area .shipyard')\n    shipyard.style.flexDirection = 'column'\n}\n\nconst orientationButton = document.querySelector('.orientation')\nconst ships = document.querySelectorAll('.ship');\nconst cells = document.querySelectorAll('.cell');\n\norientationButton.addEventListener('click', toggleOrientation)\n\nfunction toggleOrientation() {\n    const shipyard1 = document.querySelector('.player1Area .shipyard')\n    const shipyard2 = document.querySelector('.player2Area .shipyard')\n    const message = document.querySelector('.message')\n    if (axis == 'horizontal') {\n        axis = 'vertical'\n        // console.log(axis)\n        ships.forEach(ship => {\n            if (ship.parentNode.classList[1] != 'cell') {\n                ship.classList.remove('horizontal')\n                ship.classList.add('vertical')\n            }\n        })\n        shipyard1.style.flexDirection = 'row'\n        shipyard2.style.flexDirection = 'row'\n        message.textContent = 'Ship Orientation: Vertical'\n    }\n    else if (axis == 'vertical') {\n        axis = 'horizontal'\n        // console.log(axis)\n        ships.forEach(ship => {\n            if (ship.parentNode.classList[1] != 'cell') {\n                ship.classList.remove('vertical')\n                ship.classList.add('horizontal')\n            }\n        })\n        shipyard1.style.flexDirection = 'column'\n        shipyard2.style.flexDirection = 'column'\n        message.textContent = 'Ship Orientation: Horizontal'\n    }\n}\n\nfunction toggleHorizontalVertical(ship) {\n    const shipHeight = ship.offsetHeight\n    const shipWidth = ship.offsetWidth\n    // console.log('Width: ', shipWidth, ', Height: ', shipHeight)\n\n    if (axis == 'horizontal') {\n        // IF SHIP GOES OUT OF BOUNDS DON'T CHANGE ORTIENTATION\n        if (shipWidth > shipHeight) {\n            ship.classList.remove('vertical')\n            ship.classList.add('horizontal')\n        }\n        // rotating ship\n        else {\n            let lengthOfShip = Math.round(shipHeight / shipWidth)\n            let appendedCell = parseInt(ship.parentNode.classList[0].match(/\\d+/g))\n            \n            if (ship.parentNode.classList[0] != 'cell09' \n                && ship.parentNode.classList[0] != 'cell19' \n                && ship.parentNode.classList[0] != 'cell29' \n                && ship.parentNode.classList[0] != 'cell39' \n                && ship.parentNode.classList[0] != 'cell49' \n                && ship.parentNode.classList[0] != 'cell59' \n                && ship.parentNode.classList[0] != 'cell69' \n                && ship.parentNode.classList[0] != 'cell79' \n                && ship.parentNode.classList[0] != 'cell89' \n                && ship.parentNode.classList[0] != 'cell99')  {\n\n                if (lengthOfShip == 2) {\n                    let cellsFreeForRotation = checkStorage(appendedCell, lengthOfShip)\n                    if (cellsFreeForRotation == true) {\n                        ship.classList.remove('vertical')\n                        ship.classList.add('horizontal')\n                    }\n                }\n                else {\n                    if (appendedCell + lengthOfShip -1 != 10 \n                        && appendedCell + lengthOfShip -1 != 20 \n                        && appendedCell + lengthOfShip -1 != 30 \n                        && appendedCell + lengthOfShip -1 != 40\n                        && appendedCell + lengthOfShip -1 != 50 \n                        && appendedCell + lengthOfShip -1 != 60\n                        && appendedCell + lengthOfShip -1 != 70 \n                        && appendedCell + lengthOfShip -1 != 80\n                        && appendedCell + lengthOfShip -1 != 90 \n                        && appendedCell + lengthOfShip -1 < 100) {\n\n                        if (lengthOfShip == 3) {\n                            let cellsFreeForRotation = checkStorage(appendedCell, lengthOfShip)\n                            if (cellsFreeForRotation == true) {\n                                ship.classList.remove('vertical')\n                                ship.classList.add('horizontal')\n                            }\n                        }\n\n                        if (appendedCell + lengthOfShip -1 != 11 \n                            && appendedCell + lengthOfShip -1 != 21 \n                            && appendedCell + lengthOfShip -1 != 31 \n                            && appendedCell + lengthOfShip -1 != 41\n                            && appendedCell + lengthOfShip -1 != 51 \n                            && appendedCell + lengthOfShip -1 != 61\n                            && appendedCell + lengthOfShip -1 != 71 \n                            && appendedCell + lengthOfShip -1 != 81\n                            && appendedCell + lengthOfShip -1 != 91) {\n\n                            if (lengthOfShip == 4) {\n                                let cellsFreeForRotation = checkStorage(appendedCell, lengthOfShip)\n                                if (cellsFreeForRotation == true) {\n                                    ship.classList.remove('vertical')\n                                    ship.classList.add('horizontal')\n                                }\n                            }\n\n                            if (appendedCell + lengthOfShip -1 != 12 \n                                && appendedCell + lengthOfShip -1 != 22 \n                                && appendedCell + lengthOfShip -1 != 32 \n                                && appendedCell + lengthOfShip -1 != 42\n                                && appendedCell + lengthOfShip -1 != 52 \n                                && appendedCell + lengthOfShip -1 != 62\n                                && appendedCell + lengthOfShip -1 != 72 \n                                && appendedCell + lengthOfShip -1 != 82\n                                && appendedCell + lengthOfShip -1 != 92) {\n    \n                                if (lengthOfShip == 5) {\n                                    let cellsFreeForRotation = checkStorage(appendedCell, lengthOfShip)\n                                    if (cellsFreeForRotation == true) {\n                                        ship.classList.remove('vertical')\n                                        ship.classList.add('horizontal')\n                                    }\n                                }\n                            }\n\n                        }\n                    }\n                }\n            }\n        }\n    }\n    else if (axis == 'vertical') {\n        // IF CONDITION TO CHECK IF CELL WILL GO OUT OF BOUNDS IN LAST ROW\n        // First determine if ship is vertical or horizontal\n        // if it's vertical just the below\n        if (shipHeight > shipWidth) {\n            ship.classList.remove('horizontal')\n            ship.classList.add('vertical')\n        }\n        // else need to do the bug prevention for moving horizontal\n        // Bug to prevent ship overflowing board when rotating ship\n        else {\n            let lengthOfShip = Math.round(shipWidth / shipHeight)\n            let appendedCell = parseInt(ship.parentNode.classList[0].match(/\\d+/g))\n            if (appendedCell + (lengthOfShip - 1) * 10 < 100) {\n                // checkoccupied\n                let cellsFreeForRotation = checkStorage(appendedCell, lengthOfShip)\n                if (cellsFreeForRotation == true) {\n                    ship.classList.remove('horizontal')\n                    ship.classList.add('vertical')\n                }\n            }\n        }\n    }\n}\n\n// ships.forEach(ship => {\n//     // Applies the dragging class to ship which alters its style\n//     ship.addEventListener('dragstart', e => {\n//         ship.classList.add('dragging')\n//     })\n//     ship.addEventListener('dragend', e => {\n//         ship.classList.remove('dragging');\n//         toggleHorizontalVertical(ship)\n//     });\n// })\n\n// // // This would be put into a function where the R key will toggle between cell eventlistners\n// cells.forEach(cell => {\n//     cell.addEventListener('dragover', (e) => highlightCells(e, cell))\n//     cell.addEventListener('dragleave', (e) => unhighlightCells(e, cell))\n//     cell.addEventListener('drop', (e) => dropShipOnBoard(e, cell))\n// })\n\nfunction highlightAllowedPlacement(cell, lengthOfShip) {\n    let player1AreaShowing = window.getComputedStyle(document.querySelector('.player1Area')).display\n    let player2AreaShowing = window.getComputedStyle(document.querySelector('.player2Area')).display\n\n    // console.log(player2AreaShowing)\n    cell.classList.add('moveAllowed')\n    if (axis == 'horizontal') {\n        let nextCell = cell.nextSibling\n        if (player1AreaShowing != 'none') document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.add('moveAllowed')\n        if (player2AreaShowing != 'none') document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.add('moveAllowed')\n\n        for (let i = 0; i < lengthOfShip - 2; i++) {\n            nextCell = nextCell.nextSibling\n            if (player1AreaShowing != 'none') document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.add('moveAllowed')\n            if (player2AreaShowing != 'none') document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.add('moveAllowed')\n        }\n    }\n    else if (axis == 'vertical') {\n        let nextCell = cell.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling\n        if (player1AreaShowing != 'none') document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.add('moveAllowed')\n        if (player2AreaShowing != 'none') document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.add('moveAllowed')\n        for (let i = 0; i < lengthOfShip - 2; i++) {\n            nextCell = nextCell.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling\n            if (player1AreaShowing != 'none') document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.add('moveAllowed')\n            if (player2AreaShowing != 'none') document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.add('moveAllowed')\n        }\n    }\n}\n\nfunction highlightNotAllowedPlacement(cell, lengthOfShip) {\n    let player1AreaShowing = window.getComputedStyle(document.querySelector('.player1Area')).display\n    let player2AreaShowing = window.getComputedStyle(document.querySelector('.player2Area')).display\n\n    cell.classList.add('moveNotAllowed')\n    if (axis == 'horizontal') {\n        let nextCell = cell.nextSibling\n        if (player1AreaShowing != 'none') document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.add('moveNotAllowed')\n        if (player2AreaShowing != 'none') document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.add('moveNotAllowed')\n        for (let i = 0; i < lengthOfShip - 2; i++) {\n            nextCell = nextCell.nextSibling\n            if (player1AreaShowing != 'none') document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.add('moveNotAllowed')\n            if (player2AreaShowing != 'none') document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.add('moveNotAllowed')\n        }\n    }\n    else if (axis == 'vertical') {\n        let nextCell = cell.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling\n        if (player1AreaShowing != 'none') document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.add('moveNotAllowed')\n        if (player2AreaShowing != 'none') document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.add('moveNotAllowed')\n        for (let i = 0; i < lengthOfShip - 2; i++) {\n            nextCell = nextCell.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling.nextSibling\n            if (player1AreaShowing != 'none') document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.add('moveNotAllowed')\n            if (player2AreaShowing != 'none') document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.add('moveNotAllowed')\n        }\n    }\n}\n\nfunction removeHoveringClassFromCell(cell, lengthOfShip) {\n    let player1AreaShowing = window.getComputedStyle(document.querySelector('.player1Area')).display\n    let player2AreaShowing = window.getComputedStyle(document.querySelector('.player2Area')).display\n\n    cell.classList.remove('moveAllowed')\n    cell.classList.remove('moveNotAllowed')\n    if (axis == 'horizontal') {\n        if (cell.nextSibling != null) {\n            let nextCell = cell.nextSibling\n            if (player1AreaShowing != 'none') {\n                document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.remove('moveAllowed')\n                document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.remove('moveNotAllowed')\n            }\n            if (player2AreaShowing != 'none') {\n                document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.remove('moveAllowed')\n                document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.remove('moveNotAllowed')\n            }\n            for (let i = 0; i < lengthOfShip - 2; i++) {\n                if (nextCell.nextSibling != null) {\n                    nextCell = nextCell.nextSibling\n                    if (player1AreaShowing != 'none') {\n                        document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.remove('moveAllowed')\n                        document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.remove('moveNotAllowed')\n                    }\n                    if (player2AreaShowing != 'none') {\n                        document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.remove('moveAllowed')\n                        document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.remove('moveNotAllowed')\n                    }\n                }\n            }\n        }\n    }\n    else if (axis = 'vertical') {\n        let cellNumber = parseInt(cell.classList[0].match(/\\d+/g))\n\n        let nextCell = document.querySelector(`.cell${cellNumber + 10}`)\n\n        if (nextCell != null) {\n            if (player1AreaShowing != 'none') {\n                document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.remove('moveAllowed')\n                document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.remove('moveNotAllowed')\n            }\n            if (player2AreaShowing != 'none') {\n                document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.remove('moveAllowed')\n                document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.remove('moveNotAllowed')\n            }\n            for (let i = 0; i < (lengthOfShip - 1) * 10; i += 10) {\n\n                nextCell = document.querySelector(`.cell${cellNumber + 10 + i}`)\n\n                if (nextCell != null) {\n                    if (player1AreaShowing != 'none') {\n                        document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.remove('moveAllowed')\n                        document.querySelector(`.player1Area .${nextCell.classList[0]}`).classList.remove('moveNotAllowed')\n                    }\n                    if (player2AreaShowing != 'none') {\n                        document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.remove('moveAllowed')\n                        document.querySelector(`.player2Area .${nextCell.classList[0]}`).classList.remove('moveNotAllowed')\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction checkPatrolBoatCoordinates(coordinate) {\n    for (let j = 0; j < patrolBoatCells.length; j++) {\n        let patrolBoatCoordinate = patrolBoatCells[j]\n        if (coordinate[0] == patrolBoatCoordinate[0] && coordinate[1] == patrolBoatCoordinate[1]) return false\n    }\n}\n\nfunction checkDestroyerCoordinates(coordinate) {\n    for (let j = 0; j < destroyerCells.length; j++) {\n        let destroyerCoordinate = destroyerCells[j]\n        if (coordinate[0] == destroyerCoordinate[0] && coordinate[1] == destroyerCoordinate[1]) return false\n    }\n}\n\nfunction checkBattleshipCoordinates(coordinate) {\n    for (let j = 0; j < battleshipCells.length; j++) {\n        let battleshipCoordinate = battleshipCells[j]\n        if (coordinate[0] == battleshipCoordinate[0] && coordinate[1] == battleshipCoordinate[1]) return false\n    }\n}\n\nfunction checkCarrierCoordinates(coordinate) {\n    for (let j = 0; j < carrierCells.length; j++) {\n        let carrierCoordinate = carrierCells[j]\n        if (coordinate[0] == carrierCoordinate[0] && coordinate[1] == carrierCoordinate[1]) return false\n    }\n}\n\nfunction checkStorage(firstCellNumber, lengthOfShip) {\n\n\n    if (axis == 'horizontal') {\n        for (let i = 0; i < lengthOfShip; i++) {\n            let coordinate = getCoordinate(firstCellNumber + i)\n            if (lengthOfShip == 2) {\n                let destroyerInCells = checkDestroyerCoordinates(coordinate)\n                let battleshipInCells = checkBattleshipCoordinates(coordinate)\n                let carrierInCells = checkCarrierCoordinates(coordinate)\n                if (destroyerInCells == false || battleshipInCells == false || carrierInCells == false) return false\n            }\n            else if (lengthOfShip == 3) {\n                let patrolBoatInCells = checkPatrolBoatCoordinates(coordinate)\n                let battleshipInCells = checkBattleshipCoordinates(coordinate)\n                let carrierInCells = checkCarrierCoordinates(coordinate)\n                if (patrolBoatInCells == false || battleshipInCells == false || carrierInCells == false) return false\n            }\n            else if (lengthOfShip == 4) {\n                let patrolBoatInCells = checkPatrolBoatCoordinates(coordinate)\n                let destroyerInCells = checkDestroyerCoordinates(coordinate)\n                let carrierInCells = checkCarrierCoordinates(coordinate)\n                if (patrolBoatInCells == false || destroyerInCells == false || carrierInCells == false) return false\n            }\n            else if (lengthOfShip == 5) {\n                let patrolBoatInCells = checkPatrolBoatCoordinates(coordinate)\n                let destroyerInCells = checkDestroyerCoordinates(coordinate)\n                let battleshipInCells = checkBattleshipCoordinates(coordinate)\n                if (patrolBoatInCells == false || destroyerInCells == false || battleshipInCells == false) return false\n            }\n        }\n        return true\n    }\n    else if (axis == 'vertical') {\n        for (let i = 0; i < lengthOfShip * 10; i += 10) {\n            let coordinate = getCoordinate(firstCellNumber + i)\n            if (lengthOfShip == 2) {\n                let destroyerInCells = checkDestroyerCoordinates(coordinate)\n                let battleshipInCells = checkBattleshipCoordinates(coordinate)\n                let carrierInCells = checkCarrierCoordinates(coordinate)\n                if (destroyerInCells == false || battleshipInCells == false || carrierInCells == false) return false\n            }\n            else if (lengthOfShip == 3) {\n                let patrolBoatInCells = checkPatrolBoatCoordinates(coordinate)\n                let battleshipInCells = checkBattleshipCoordinates(coordinate)\n                let carrierInCells = checkCarrierCoordinates(coordinate)\n                if (patrolBoatInCells == false || battleshipInCells == false || carrierInCells == false) return false\n            }\n            else if (lengthOfShip == 4) {\n                let patrolBoatInCells = checkPatrolBoatCoordinates(coordinate)\n                let destroyerInCells = checkDestroyerCoordinates(coordinate)\n                let carrierInCells = checkCarrierCoordinates(coordinate)\n                if (patrolBoatInCells == false || destroyerInCells == false || carrierInCells == false) return false\n            }\n            else if (lengthOfShip == 5) {\n                let patrolBoatInCells = checkPatrolBoatCoordinates(coordinate)\n                let destroyerInCells = checkDestroyerCoordinates(coordinate)\n                let battleshipInCells = checkBattleshipCoordinates(coordinate)\n                if (patrolBoatInCells == false || destroyerInCells == false || battleshipInCells == false) return false\n            }\n        }\n        return true\n    }\n\n}\n\nfunction storeOccupiedCells(startingCoordinate, endingCoordinate, lengthOfShip) {\n\n    if (axis == 'horizontal') {\n        if (lengthOfShip == 2) {\n            patrolBoatCells.push(startingCoordinate)\n            for (let i = startingCoordinate[1] + 1; i < endingCoordinate[1]; i++) {\n                patrolBoatCells.push([startingCoordinate[0], i])\n            }\n            patrolBoatCells.push(endingCoordinate)\n            // console.log('strored patrol boat: ',patrolBoatCells)\n        }\n        else if (lengthOfShip == 3) {\n            destroyerCells.push(startingCoordinate)\n            for (let i = startingCoordinate[1] + 1; i < endingCoordinate[1]; i++) {\n                destroyerCells.push([startingCoordinate[0], i])\n            }\n            destroyerCells.push(endingCoordinate)\n            // console.log('strored destroyer: ',destroyerCells)\n        }\n        else if (lengthOfShip == 4) {\n            battleshipCells.push(startingCoordinate)\n            for (let i = startingCoordinate[1] + 1; i < endingCoordinate[1]; i++) {\n                battleshipCells.push([startingCoordinate[0], i])\n            }\n            battleshipCells.push(endingCoordinate)\n            // console.log('strored battleship: ',battleshipCells)\n        }\n        else if (lengthOfShip == 5) {\n            carrierCells.push(startingCoordinate)\n            for (let i = startingCoordinate[1] + 1; i < endingCoordinate[1]; i++) {\n                carrierCells.push([startingCoordinate[0], i])\n            }\n            carrierCells.push(endingCoordinate)\n            // console.log('strored carrier: ',carrierCells)\n        }\n    }\n    else if (axis == 'vertical') {\n        if (lengthOfShip == 2) {\n            patrolBoatCells.push(startingCoordinate)\n            for (let i = startingCoordinate[0] + 1; i < endingCoordinate[0]; i++) {\n                patrolBoatCells.push([i, startingCoordinate[1]])\n            }\n            patrolBoatCells.push(endingCoordinate)\n            console.log('strored patrol boat: ',patrolBoatCells)\n        }\n        else if (lengthOfShip == 3) {\n            destroyerCells.push(startingCoordinate)\n            for (let i = startingCoordinate[0] + 1; i < endingCoordinate[0]; i++) {\n                destroyerCells.push([i, startingCoordinate[1]])\n            }\n            destroyerCells.push(endingCoordinate)\n            console.log('strored destroyer: ',destroyerCells)\n        }\n        else if (lengthOfShip == 4) {\n            battleshipCells.push(startingCoordinate)\n            for (let i = startingCoordinate[0] + 1; i < endingCoordinate[0]; i++) {\n                battleshipCells.push([i, startingCoordinate[1]])\n            }\n            battleshipCells.push(endingCoordinate)\n            console.log('strored battleship: ',battleshipCells)\n        }\n        else if (lengthOfShip == 5) {\n            carrierCells.push(startingCoordinate)\n            for (let i = startingCoordinate[0] + 1; i < endingCoordinate[0]; i++) {\n                carrierCells.push([i, startingCoordinate[1]])\n            }\n            carrierCells.push(endingCoordinate)\n            console.log('strored carrier: ',carrierCells)\n        }\n    }\n}\n\nconst highlightCells = (e, cell) => {\n    e.preventDefault()\n    const ship = document.querySelector('.dragging')\n    const cellWidth = cell.offsetWidth;\n    const shipWidth = ship.offsetWidth;\n    const shipHeight = ship.offsetHeight;\n    let firstCellNumber = parseInt(cell.classList[0].match(/\\d+/g))\n\n\n    if (axis == 'horizontal') {\n        let lengthOfShip;\n        if (ship.classList[1] == 'vertical') {\n            lengthOfShip = Math.round(shipHeight / cellWidth)\n            // console.log('vertical ship',lengthOfShip)\n        }\n        else if (ship.classList[1] == 'horizontal') {\n            lengthOfShip = Math.round(shipWidth / cellWidth)\n            // console.log('horizontal ship',lengthOfShip)\n        }\n        if (cell.classList[0] != 'cell09' \n            && cell.classList[0] != 'cell19' \n            && cell.classList[0] != 'cell29' \n            && cell.classList[0] != 'cell39' \n            && cell.classList[0] != 'cell49' \n            && cell.classList[0] != 'cell59' \n            && cell.classList[0] != 'cell69' \n            && cell.classList[0] != 'cell79' \n            && cell.classList[0] != 'cell89' \n            && cell.classList[0] != 'cell99') {\n\n            let unoccupiedCells = checkStorage(firstCellNumber, lengthOfShip)\n            let lastCellNumber = firstCellNumber + lengthOfShip - 1 \n\n            if (lengthOfShip == 2) {\n                if (unoccupiedCells == true) {\n                    highlightAllowedPlacement(cell, lengthOfShip)\n                }\n                else {\n                    highlightNotAllowedPlacement(cell, lengthOfShip)\n                }\n            }\n            // For ships that are  longer than 2\n            else {\n                if (lastCellNumber != 10 && lastCellNumber != 20 \n                    && lastCellNumber != 30 && lastCellNumber != 40\n                    && lastCellNumber != 50 && lastCellNumber != 60\n                    && lastCellNumber != 70 && lastCellNumber != 80\n                    && lastCellNumber != 90 && lastCellNumber < 100) {\n    \n                    if (lengthOfShip == 3) {\n                        if (unoccupiedCells == true) {\n                            highlightAllowedPlacement(cell, lengthOfShip)\n                        }\n                        else {\n                            highlightNotAllowedPlacement(cell, lengthOfShip)\n                        }\n                    }\n    \n                    if (lengthOfShip == 4\n                        && lastCellNumber != 11 && lastCellNumber != 21 \n                        && lastCellNumber != 31 && lastCellNumber != 41\n                        && lastCellNumber != 51 && lastCellNumber != 61\n                        && lastCellNumber != 71 && lastCellNumber != 81\n                        && lastCellNumber != 91) {\n                        \n                        if (unoccupiedCells == true) {\n                            highlightAllowedPlacement(cell, lengthOfShip)\n                        }\n                        else {\n                            highlightNotAllowedPlacement(cell, lengthOfShip)\n                        }             \n                    }\n    \n                    if (lengthOfShip == 5\n                        && lastCellNumber != 11 && lastCellNumber != 12 \n                        && lastCellNumber != 21 && lastCellNumber != 22\n                        && lastCellNumber != 31 && lastCellNumber != 32\n                        && lastCellNumber != 41 && lastCellNumber != 42\n                        && lastCellNumber != 51 && lastCellNumber != 52\n                        && lastCellNumber != 61 && lastCellNumber != 62 \n                        && lastCellNumber != 71 && lastCellNumber != 72\n                        && lastCellNumber != 81 && lastCellNumber != 82\n                        && lastCellNumber != 91 && lastCellNumber != 92) {\n    \n                        if (unoccupiedCells == true) {\n                            highlightAllowedPlacement(cell, lengthOfShip)\n                        }\n                        else {\n                            highlightNotAllowedPlacement(cell, lengthOfShip)\n                        }\n    \n                    }\n                }\n            }\n        }\n    }\n    else if (axis == 'vertical') {\n        let lengthOfShip;\n        if (ship.classList[1] == 'vertical') {\n            lengthOfShip = Math.round(shipHeight / cellWidth)\n        }\n        else if (ship.classList[1] == 'horizontal') {\n            lengthOfShip = Math.round(shipWidth / cellWidth)\n        }\n        if (cell.classList[0] != 'cell90' \n            && cell.classList[0] != 'cell91' \n            && cell.classList[0] != 'cell92' \n            && cell.classList[0] != 'cell93' \n            && cell.classList[0] != 'cell94' \n            && cell.classList[0] != 'cell95' \n            && cell.classList[0] != 'cell96' \n            && cell.classList[0] != 'cell97' \n            && cell.classList[0] != 'cell98' \n            && cell.classList[0] != 'cell99') {\n\n            let unoccupiedCells = checkStorage(firstCellNumber, lengthOfShip)\n            let lastCellNumber = firstCellNumber + (lengthOfShip - 1) * 10  \n\n            if (lengthOfShip == 2) {\n                if (unoccupiedCells == true) {\n                    highlightAllowedPlacement(cell, lengthOfShip)\n                }\n                else {\n                    highlightNotAllowedPlacement(cell, lengthOfShip)\n                }\n            }\n            // For ships that are  longer than 2\n            \n            else {\n                if (lastCellNumber < 100) {\n                    if (unoccupiedCells == true) {\n                        highlightAllowedPlacement(cell, lengthOfShip)\n                    }\n                    else {\n                        highlightNotAllowedPlacement(cell, lengthOfShip)\n                    }\n                }\n            }\n        }\n        \n    }\n}\n\nconst unhighlightCells = (e, cell) => {\n    e.preventDefault()\n    const ship = document.querySelector('.dragging')\n    const cellWidth = cell.offsetWidth; \n    const shipWidth = ship.offsetWidth;\n    const shipHeight = ship.offsetHeight;\n    if (axis == 'horizontal') {\n        let lengthOfShip\n        if (ship.classList[1] == 'vertical') {\n            lengthOfShip = Math.round(shipHeight / cellWidth)\n        }\n        else if (ship.classList[1] == 'horizontal') {\n            lengthOfShip = Math.round(shipWidth / cellWidth)\n        }\n        removeHoveringClassFromCell(cell, lengthOfShip)\n    }\n    else if (axis == 'vertical') {\n        let lengthOfShip\n        if (ship.classList[1] == 'vertical') {\n            lengthOfShip = Math.round(shipHeight / cellWidth)\n        }\n        else if (ship.classList[1] == 'horizontal') {\n            lengthOfShip = Math.round(shipWidth / cellWidth)\n        }\n        removeHoveringClassFromCell(cell, lengthOfShip)\n    }\n}\n\nconst dropShipOnBoard = (e, cell) => {\n    e.preventDefault()\n    const ship = document.querySelector('.dragging');\n\n\n    if(ship) {\n        const cellWidth = cell.offsetWidth; \n        let firstCellNumber = parseInt(cell.classList[0].match(/\\d+/g))\n        const shipWidth = ship.offsetWidth;\n        const shipHeight = ship.offsetHeight;\n\n        if (axis == 'horizontal') {\n            if (cell.classList[0] != 'cell09' \n                && cell.classList[0] != 'cell19' \n                && cell.classList[0] != 'cell29' \n                && cell.classList[0] != 'cell39' \n                && cell.classList[0] != 'cell49' \n                && cell.classList[0] != 'cell59' \n                && cell.classList[0] != 'cell69' \n                && cell.classList[0] != 'cell79' \n                && cell.classList[0] != 'cell89' \n                && cell.classList[0] != 'cell99') {\n                \n                let lengthOfShip\n                if (ship.classList[1] == 'vertical') {\n                    lengthOfShip = Math.round(shipHeight / cellWidth)\n                }\n                else if (ship.classList[1] == 'horizontal') {\n                    lengthOfShip = Math.round(shipWidth / cellWidth)\n                }\n                let lastCellNumber = firstCellNumber + lengthOfShip - 1\n\n                if (lengthOfShip == 2) {\n                    removeHoveringClassFromCell(cell, lengthOfShip)  \n                    let startingCoordinate = getCoordinate(firstCellNumber)\n                    let endingCoordinate = getCoordinate(lastCellNumber)\n                    let unoccupiedCells = checkStorage(firstCellNumber, lengthOfShip)\n                    if (unoccupiedCells == true) {\n                        appendShipToCell(cell, ship)\n                        removeCellsFromStorage(lengthOfShip)\n                        storeOccupiedCells(startingCoordinate, endingCoordinate, lengthOfShip)\n                    }\n                }\n                else {\n                    if (lastCellNumber != 10 && lastCellNumber != 20 \n                        && lastCellNumber != 30 && lastCellNumber != 40\n                        && lastCellNumber != 50 && lastCellNumber != 60\n                        && lastCellNumber != 70 && lastCellNumber != 80\n                        && lastCellNumber != 90 && lastCellNumber < 100) {\n        \n                        if (lengthOfShip == 3) {\n                            removeHoveringClassFromCell(cell, lengthOfShip)\n                            let startingCoordinate = getCoordinate(firstCellNumber)\n                            let endingCoordinate = getCoordinate(lastCellNumber)\n                            let unoccupiedCells = checkStorage(firstCellNumber, lengthOfShip)\n                            if (unoccupiedCells == true) {\n                                appendShipToCell(cell, ship)\n                                removeCellsFromStorage(lengthOfShip)\n                                storeOccupiedCells(startingCoordinate, endingCoordinate, lengthOfShip)\n                            }\n                        }\n        \n                        if (lengthOfShip == 4\n                            && lastCellNumber != 11 && lastCellNumber != 21 \n                            && lastCellNumber != 31 && lastCellNumber != 41\n                            && lastCellNumber != 51 && lastCellNumber != 61\n                            && lastCellNumber != 71 && lastCellNumber != 81\n                            && lastCellNumber != 91) {\n        \n                            removeHoveringClassFromCell(cell, lengthOfShip)\n                            let startingCoordinate = getCoordinate(firstCellNumber)\n                            let endingCoordinate = getCoordinate(lastCellNumber)\n                            let unoccupiedCells = checkStorage(firstCellNumber, lengthOfShip)\n                            if (unoccupiedCells == true) {\n                                appendShipToCell(cell, ship)\n                                removeCellsFromStorage(lengthOfShip)\n                                storeOccupiedCells(startingCoordinate, endingCoordinate, lengthOfShip)\n                            }\n                        }\n        \n                        if (lengthOfShip == 5\n                            && lastCellNumber != 11 && lastCellNumber != 12 \n                            && lastCellNumber != 21 && lastCellNumber != 22\n                            && lastCellNumber != 31 && lastCellNumber != 32\n                            && lastCellNumber != 41 && lastCellNumber != 42\n                            && lastCellNumber != 51 && lastCellNumber != 52\n                            && lastCellNumber != 61 && lastCellNumber != 62 \n                            && lastCellNumber != 71 && lastCellNumber != 72\n                            && lastCellNumber != 81 && lastCellNumber != 82\n                            && lastCellNumber != 91 && lastCellNumber != 92) {\n        \n                            removeHoveringClassFromCell(cell, lengthOfShip)\n                            let startingCoordinate = getCoordinate(firstCellNumber)\n                            let endingCoordinate = getCoordinate(lastCellNumber)\n                            let unoccupiedCells = checkStorage(firstCellNumber, lengthOfShip)\n                            if (unoccupiedCells == true) {\n                                appendShipToCell(cell, ship)\n                                removeCellsFromStorage(lengthOfShip)\n                                storeOccupiedCells(startingCoordinate, endingCoordinate, lengthOfShip)\n                            }\n                            \n                        }\n                    } \n                }\n            }\n        }\n        else if (axis == 'vertical') {\n            if (cell.classList[0] != 'cell90' \n                && cell.classList[0] != 'cell91' \n                && cell.classList[0] != 'cell92' \n                && cell.classList[0] != 'cell93' \n                && cell.classList[0] != 'cell94' \n                && cell.classList[0] != 'cell95' \n                && cell.classList[0] != 'cell96' \n                && cell.classList[0] != 'cell97' \n                && cell.classList[0] != 'cell98' \n                && cell.classList[0] != 'cell99') {\n\n                let lengthOfShip\n                if (ship.classList[1] == 'vertical') {\n                    lengthOfShip = Math.round(shipHeight / cellWidth)\n                }\n                else if (ship.classList[1] == 'horizontal') {\n                    lengthOfShip = Math.round(shipWidth / cellWidth)\n                }\n                let lastCellNumber = firstCellNumber + (lengthOfShip - 1) * 10\n\n                if (lengthOfShip == 2) {\n                    removeHoveringClassFromCell(cell, lengthOfShip)\n                    let startingCoordinate = getCoordinate(firstCellNumber)\n                    let endingCoordinate = getCoordinate(lastCellNumber)\n                    let unoccupiedCells = checkStorage(firstCellNumber, lengthOfShip)\n                    if (unoccupiedCells == true) {\n                        appendShipToCell(cell, ship)\n                        removeCellsFromStorage(lengthOfShip)\n                        storeOccupiedCells(startingCoordinate, endingCoordinate, lengthOfShip)\n                    }\n                }\n                else {\n                    if (lastCellNumber < 100) {\n                        removeHoveringClassFromCell(cell, lengthOfShip)\n                        let startingCoordinate = getCoordinate(firstCellNumber)\n                        let endingCoordinate = getCoordinate(lastCellNumber)\n                        let unoccupiedCells = checkStorage(firstCellNumber, lengthOfShip)\n                        if (unoccupiedCells == true) {\n                            appendShipToCell(cell, ship)\n                            removeCellsFromStorage(lengthOfShip)\n                            storeOccupiedCells(startingCoordinate, endingCoordinate, lengthOfShip)\n                        }\n                    }\n                }\n            }\n        }\n        displayContinueButton()\n        \n    }\n}\n\nfunction displayContinueButton() {\n    let player1AreaShowing = window.getComputedStyle(document.querySelector('.player1Area')).display\n    let player2AreaShowing = window.getComputedStyle(document.querySelector('.player2Area')).display\n\n    const shipyard1 = document.querySelector('.player1Area .shipyard')\n    const shipyard2 = document.querySelector('.player2Area .shipyard')\n\n    if (player1AreaShowing != 'none') {\n        if (shipyard1.childElementCount == 1) {\n            document.querySelector('#submitPlayer1Ships').style.display = ''\n        }\n    }\n    console.log(shipyard2.childElementCount)\n    if (player2AreaShowing != 'none') {\n        if (shipyard2.childElementCount == 1) {\n            document.querySelector('#submitPlayer2Ships').style.display = ''\n        }\n    }\n}\n\n//# sourceURL=webpack://modulestemplate/./src/gameboard-UI.js?");

/***/ }),

/***/ "./src/gameboard.js":
/*!**************************!*\
  !*** ./src/gameboard.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Gameboard: () => (/* binding */ Gameboard)\n/* harmony export */ });\n\n// Need to console log the return messages to confirm it's working\n// need to switch betweeen export (& comment out import) & modules.export\n// import { placeShipOnSquare } from \"./gameboard-UI\";\n\nclass Gameboard {\n    constructor(size) {\n        this.size = size;\n        this.board = Array(size).fill(null).map(() => Array(size).fill(null))\n        this.boardState = Array(size).fill(null).map(() => Array(size).fill(null))\n        this.ships = []\n    }\n\n    placeShip(ship, verticalStart, horizontalStart, verticalEnd, horizontalEnd, player) {\n\n        // Check if co-ordinates are within the board\n        if (verticalStart > 9 || horizontalStart > 9 || verticalEnd > 9 || horizontalEnd > 9) return 'Out of bounds'\n        if (verticalStart < 0 || horizontalStart < 0 || verticalEnd < 0 || horizontalEnd < 0) return 'Out of bounds'\n\n        // Check if co-ordintes & in between are emoty\n        let emptyCells = this.checkIfSquaresAreEmpty(ship, verticalStart, horizontalStart, verticalEnd, horizontalEnd)\n        if (emptyCells != null) return emptyCells\n\n        // Check if co-ordinates match length\n        if (verticalStart != verticalEnd) {\n            if (verticalEnd - verticalStart + 1 != ship.length) return 'Co-ordinates dont match length'\n        }\n        if (horizontalStart != horizontalEnd) {\n            if (horizontalEnd - horizontalStart + 1 != ship.length) return 'Co-ordinates dont match length'\n        }\n\n        this.ships.push(ship)\n        this.board[verticalStart][horizontalStart] = ship\n        \n        // placeShipOnSquare gets called for each square\n        // placeShipOnSquare(player, ship.name, verticalStart, horizontalStart)\n\n        // Fill in remaining spaces\n        // Patrol boat has a lenght of 2 so no need to fill in gaps\n        if (ship.name != 'Patrol Boat') {\n\n            // Vertical positioning\n            if (verticalStart != verticalEnd) {\n                let column = horizontalStart\n                // As there's start & end co-ordinates, only need to fill gaps in between\n                // hence ship.length - 1\n                for (let i = 1; i < ship.length - 1; i++) {\n                    this.board[verticalStart + i][column] = ship\n                    // placeShipOnSquare(player, ship.name, verticalStart + i, column)\n                }\n            }\n            \n            // Horizontal positioning\n            if (horizontalStart != horizontalEnd) {\n                let row = verticalStart\n                // As there's start & end co-ordinates, only need to fill gaps in between\n                // hence ship.length - 1\n                for (let i = 1; i < ship.length - 1; i++) {\n                    this.board[row][horizontalStart + i] = ship\n                    // placeShipOnSquare(player, ship.name, row, horizontalStart + i)\n                }\n            }\n\n        }\n\n        this.board[verticalEnd][horizontalEnd] = ship\n        // placeShipOnSquare(player, ship.name, verticalEnd, horizontalEnd)\n\n        // console.log(`${ship.name} placed`)\n        return `${ship.name} placed`\n    }\n\n    checkIfSquaresAreEmpty(ship, verticalStart, horizontalStart, verticalEnd, horizontalEnd) {\n        // Check starting & end co-ordinates\n        if(this.board[verticalStart][horizontalStart] != null || this.board[verticalEnd][horizontalEnd] != null) {\n            return 'Ship already in co-ordinates'\n        }\n        // Check co-ordinates in between\n        if (ship.name != 'Patrol Boat') {\n\n            // Vertical positioning\n            if (verticalStart != verticalEnd) {\n                let column = horizontalStart\n                // As there's start & end co-ordinates, only need to fill gaps in between\n                // hence ship.length - 1\n                for (let i = 1; i < ship.length - 1; i++) {\n                    if (this.board[verticalStart + i][column] != null) return 'Ship already in co-ordinates'\n                }\n            }\n            \n            // Horizontal positioning\n            if (horizontalStart != horizontalEnd) {\n                let row = verticalStart\n                // As there's start & end co-ordinates, only need to fill gaps in between\n                // hence ship.length - 1\n                for (let i = 1; i < ship.length - 1; i++) {\n                    if (this.board[row][horizontalStart + i] != null) return 'Ship already in co-ordinates'\n                }\n            }\n\n        }\n\n        return null\n    }\n\n    receiveAttack(vertical, horizontal) {\n\n        if (vertical < 0 || vertical > 9 || horizontal < 0 || horizontal > 9) return 'Out of bounds'\n        \n        if (this.board[vertical][horizontal] != null) {\n            this.boardState[vertical][horizontal] = 'Hit'\n            // console.log('Hit')\n            return this.board[vertical][horizontal].hit()\n        }\n        else {\n            this.boardState[vertical][horizontal] = 'Miss'\n            // console.log('Miss')\n            return 'Miss'\n        }\n    }\n\n    getBoardState() {\n        return this.boardState\n    }\n\n    allShipsSunk() {\n\n        if (this.ships.length != 0) {\n            let shipsSank = 0\n            for (const ship of this.ships) {\n                if (ship.sunk == true) shipsSank++\n            }\n            if (shipsSank == this.ships.length) {\n                console.log('All ships sunk')\n                return 'All ships sunk'\n            }\n            else {\n                console.log('Ships remaining')\n                return 'Ships remaining'\n            }\n        }\n        else {\n            return 'No ships on the board'\n        }\n    }\n}\n\n// module.exports = Gameboard\n\n\n\n//# sourceURL=webpack://modulestemplate/./src/gameboard.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.css */ \"./src/style.css\");\n/* harmony import */ var _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gameboard-UI */ \"./src/gameboard-UI.js\");\n/* harmony import */ var _shipClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shipClass */ \"./src/shipClass.js\");\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./player */ \"./src/player.js\");\n/* harmony import */ var _form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./form */ \"./src/form.js\");\n\n\n\n\n\n\n\n\nlet player1\nlet player2\nlet player1name\nlet player2name\nlet twoPlayerGame = false\nlet playerTurn = 'player1'\n\n// Load form\nfunction form() {\n  ;(0,_form__WEBPACK_IMPORTED_MODULE_4__.loadForm)()\n  ;(0,_form__WEBPACK_IMPORTED_MODULE_4__.togglePlayer2)()\n  // submitNames()\n  document.querySelector('.gameArea').style.display = 'None'\n  document.querySelector('.textArea').style.display = 'none'\n}\nform()\n\nconst submitNamesButton = document.getElementById('submitNames')\nsubmitNamesButton.addEventListener('click', (e) => {\n  e.preventDefault()\n  player1name = document.getElementById('player1Name').value\n  player1 = new _player__WEBPACK_IMPORTED_MODULE_3__.Player(player1name, 'Real')\n  player2name = document.getElementById('player2Name').value\n  document.querySelector('.player1Name').textContent = `${player1name}'s Board`\n\n  console.log(player1)\n  if (document.getElementById('player2ToPlay').checked != true) {\n    player2 = new _player__WEBPACK_IMPORTED_MODULE_3__.Player('Computer', 'Fake')\n    document.querySelector('.player2Name').textContent = `Computer's Board`\n    console.log(player2)\n  }\n  else {\n    player2 = new _player__WEBPACK_IMPORTED_MODULE_3__.Player(player2name, 'Real')\n    console.log(player2)\n    document.querySelector('.player2Name').textContent = `${player2name}'s Board`\n    twoPlayerGame = true\n  }\n  document.querySelector('.form').style.display = 'None'\n  document.querySelector('.formContainer').style.display = 'None'\n  document.querySelector('.gameArea').style.display = ''\n  document.querySelector('.player2Area').style.display = 'None'\n  document.querySelector('.player1BoardState').style.display = 'none'\n  document.querySelector('.textArea').style.display = ''\n  document.querySelector('.nextPlayerTurn').style.display = 'none'\n})\n\n// Load board\n;(0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.createPlayer1Board)()\nactivatePlayer1Board()\n\nfunction activatePlayer1Board() {\n  const player1Ships = document.querySelectorAll('.player1Area .ship');\n  const player1Cells = document.querySelectorAll('.player1Area .cell');\n  \n  const submitPlayer1Ships = document.getElementById('submitPlayer1Ships')\n  \n  player1Ships.forEach(ship => {\n    // Applies the dragging class to ship which alters its style\n    ship.addEventListener('dragstart', e => {\n        ship.classList.add('dragging')\n    })\n    ship.addEventListener('dragend', e => {\n        ship.classList.remove('dragging');\n        (0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.toggleHorizontalVertical)(ship)\n    });\n  })\n  \n  player1Cells.forEach(cell => {\n    cell.addEventListener('dragover', (e) => (0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.highlightCells)(e, cell))\n    cell.addEventListener('dragleave', (e) => (0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.unhighlightCells)(e, cell))\n    cell.addEventListener('drop', (e) => (0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.dropShipOnBoard)(e, cell))\n  })\n  \n  submitPlayer1Ships.style.display = 'none'\n  submitPlayer1Ships.addEventListener('click', createPlayer1Ships)\n}\n\nfunction activatePlayer2Board() {\n  const player2Ships = document.querySelectorAll('.player2Area .ship');\n  const player2Cells = document.querySelectorAll('.player2Area .cell');\n  \n  const submitPlayer2Ships = document.getElementById('submitPlayer2Ships')\n  \n  player2Ships.forEach(ship => {\n    // Applies the dragging class to ship which alters its style\n    ship.addEventListener('dragstart', e => {\n        ship.classList.add('dragging')\n    })\n    ship.addEventListener('dragend', e => {\n        ship.classList.remove('dragging');\n        (0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.toggleHorizontalVertical)(ship)\n    });\n  })\n  \n  player2Cells.forEach(cell => {\n    cell.addEventListener('dragover', (e) => (0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.highlightCells)(e, cell))\n    cell.addEventListener('dragleave', (e) => (0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.unhighlightCells)(e, cell))\n    cell.addEventListener('drop', (e) => (0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.dropShipOnBoard)(e, cell))\n  })\n  \n  submitPlayer2Ships.style.display = 'none'\n  submitPlayer2Ships.addEventListener('click', createPlayer2Ships)\n}\n\n(0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.createPlayer2Board)()\n\n\nfunction createPlayer1Ships() {\n  console.log(_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.patrolBoatCells)\n  console.log(_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.destroyerCells)\n  console.log(_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.battleshipCells)\n  console.log(_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.carrierCells)\n  const patrolBoat1 = new _shipClass__WEBPACK_IMPORTED_MODULE_2__.Ship('Patrol Boat', 2)\n  const destroyer1 = new _shipClass__WEBPACK_IMPORTED_MODULE_2__.Ship('Destroyer', 3)\n  const battleship1 = new _shipClass__WEBPACK_IMPORTED_MODULE_2__.Ship('Battleship', 4)\n  const carrier1 = new _shipClass__WEBPACK_IMPORTED_MODULE_2__.Ship('Carrier', 5)\n\n  player1.gameboard.placeShip(patrolBoat1, _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.patrolBoatCells[0][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.patrolBoatCells[0][1], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.patrolBoatCells[1][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.patrolBoatCells[1][1], 'player1')\n  player1.gameboard.placeShip(destroyer1, _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.destroyerCells[0][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.destroyerCells[0][1], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.destroyerCells[2][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.destroyerCells[2][1], 'player1')\n  player1.gameboard.placeShip(battleship1, _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.battleshipCells[0][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.battleshipCells[0][1], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.battleshipCells[3][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.battleshipCells[3][1], 'player1')\n  player1.gameboard.placeShip(carrier1, _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.carrierCells[0][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.carrierCells[0][1], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.carrierCells[4][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.carrierCells[4][1], 'player1')\n\n  console.log(player1)\n  if (twoPlayerGame == true) {\n    console.log(_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.axis)\n    ;(0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.resetOrientation)()\n    console.log(_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.axis)\n    ;(0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.clearAllStorage)()\n    document.querySelector('.player1Area').style.display = 'None'\n    document.querySelector('.player2Area').style.display = ''\n    document.querySelector('.player2BoardState').style.display = 'None'\n    document.querySelector('#submitPlayer1Ships').textContent = 'Continue'\n    activatePlayer2Board()\n  }\n  else {\n    // startgame\n    startPlayer1VsComputerGame()\n  }\n}\n\nfunction createPlayer2Ships() {\n  console.log(_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.patrolBoatCells)\n  console.log(_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.destroyerCells)\n  console.log(_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.battleshipCells)\n  console.log(_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.carrierCells)\n  const patrolBoat2 = new _shipClass__WEBPACK_IMPORTED_MODULE_2__.Ship('Patrol Boat', 2)\n  const destroyer2 = new _shipClass__WEBPACK_IMPORTED_MODULE_2__.Ship('Destroyer', 3)\n  const battleship2 = new _shipClass__WEBPACK_IMPORTED_MODULE_2__.Ship('Battleship', 4)\n  const carrier2 = new _shipClass__WEBPACK_IMPORTED_MODULE_2__.Ship('Carrier', 5)\n\n  player2.gameboard.placeShip(patrolBoat2, _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.patrolBoatCells[0][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.patrolBoatCells[0][1], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.patrolBoatCells[1][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.patrolBoatCells[1][1], 'player2')\n  player2.gameboard.placeShip(destroyer2, _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.destroyerCells[0][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.destroyerCells[0][1], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.destroyerCells[2][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.destroyerCells[2][1], 'player2')\n  player2.gameboard.placeShip(battleship2, _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.battleshipCells[0][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.battleshipCells[0][1], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.battleshipCells[3][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.battleshipCells[3][1], 'player2')\n  player2.gameboard.placeShip(carrier2, _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.carrierCells[0][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.carrierCells[0][1], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.carrierCells[4][0], _gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.carrierCells[4][1], 'player2')\n\n  console.log(player2)\n\n  //startgame\n  startTwoPlayerGame()\n}\n\nfunction deactiveComputerCells() {\n  document.querySelector('.player2BoardState').style.display = 'none'\n  document.querySelector('.player2Board').style.display = ''\n\n}\n\nfunction deactivatePlayerCells() {\n  document.querySelector('.player2BoardState').style.display = 'none'\n  document.querySelector('.player2Board').style.display = ''\n  document.querySelector('.player1BoardState').style.display = 'none'\n  document.querySelector('.player1Board').style.display = ''\n}\n\nfunction player1ReceiveAttackEventListiners() {\n  const player1Board = document.querySelector('.player1BoardState')\n  const cells = player1Board.querySelectorAll('.cell')\n  cells.forEach((cell) => {\n    cell.addEventListener('click', () => attackPlayer1Ships(cell), { once: true })\n  })\n}\n\nfunction player2ReceiveAttackEventListiners() {\n  const player2ReceiveAttackCells = document.querySelectorAll('.player2BoardState .cell')\n  player2ReceiveAttackCells.forEach( (cell) => {\n    cell.addEventListener('click', () => attackPlayer2Ships(cell), { once: true })\n  })\n}\n\nfunction attackPlayer1Ships(cell) {\n  let cellNumber = parseInt(cell.classList[0].match(/\\d+/g))\n  console.log(cellNumber)\n  let receiveAttackCoordinate = (0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.getCoordinate)(cellNumber)\n  console.log(receiveAttackCoordinate)\n  let hitOrMiss = player1.gameboard.receiveAttack(receiveAttackCoordinate[0], receiveAttackCoordinate[1])\n  markAttackOnBoard('player1',hitOrMiss, receiveAttackCoordinate[0], receiveAttackCoordinate[1])\n  console.log(hitOrMiss)\n  if (player2.gameboard.allShipsSunk() == 'All ships sunk') {\n    console.log('Player 2 Won')\n    document.querySelector('.message').textContent = `${player2name} Won`\n    deactivatePlayerCells()\n  }\n  else {\n    document.querySelector('.message').textContent = `${player1name} turn`\n    document.querySelector('.nextPlayerTurn').style.display = ''\n    document.querySelector('.nextPlayerTurn').textContent = `Ready ${player1name}`\n    const player2Ships = document.querySelectorAll('.player2Board .ship')\n    player2Ships.forEach(ship => {\n      ship.style.display = 'none'\n    })\n    document.querySelector('.player1BoardState').style.display = 'none'\n    document.querySelector('.player1Board').style.display = ''\n    const player1Ships = document.querySelectorAll('.player1Board .ship')\n    player1Ships.forEach(ship => {\n      ship.style.display = 'none'\n    })\n  }\n}\n\nfunction attackPlayer2Ships(cell) {\n  let cellNumber = parseInt(cell.classList[0].match(/\\d+/g))\n  console.log(cellNumber)\n  let receiveAttackCoordinate = (0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.getCoordinate)(cellNumber)\n  console.log(receiveAttackCoordinate)\n  let hitOrMiss = player2.gameboard.receiveAttack(receiveAttackCoordinate[0], receiveAttackCoordinate[1])\n  markAttackOnBoard('player2',hitOrMiss, receiveAttackCoordinate[0], receiveAttackCoordinate[1])\n  console.log(hitOrMiss)\n  if (player2.gameboard.allShipsSunk() == 'All ships sunk') {\n    console.log('Player 1 Won')\n    document.querySelector('.message').textContent = `${player1name} Won`\n    deactivatePlayerCells()\n  }\n  else {\n    document.querySelector('.message').textContent = `${player2name} turn`\n    document.querySelector('.nextPlayerTurn').style.display = ''\n    document.querySelector('.nextPlayerTurn').textContent = `Ready ${player2name}`\n    const player1Ships = document.querySelectorAll('.player1Board .ship')\n    player1Ships.forEach(ship => {\n      ship.style.display = 'none'\n    })\n    document.querySelector('.player2BoardState').style.display = 'none'\n    document.querySelector('.player2Board').style.display = ''\n    const player2Ships = document.querySelectorAll('.player2Board .ship')\n    player2Ships.forEach(ship => {\n      ship.style.display = 'none'\n    })\n  }\n}\n\nconst nextPlayerButton = document.querySelector('.nextPlayerTurn')\nnextPlayerButton.addEventListener('click', nextPlayerTurn)\n\nfunction nextPlayerTurn() {\n\n  if (playerTurn == 'player1') {\n    document.querySelector('.player1Board').style.display = 'None'\n    const player1Ships = document.querySelectorAll('.player1Board .ship')\n    player1Ships.forEach(ship => {\n      ship.style.display = 'none'\n    })\n    document.querySelector('.player2BoardState').style.display = 'None'\n    document.querySelector('.player2Board').style.display = ''\n    document.querySelector('.player1BoardState').style.display = ''\n    document.querySelector('.nextPlayerTurn').style.display = 'none'\n    const player2Ships = document.querySelectorAll('.player2Board .ship')\n    player2Ships.forEach(ship => {\n      ship.style.display = ''\n    })\n    playerTurn = 'player2'\n  }\n  else if (playerTurn == 'player2') {\n    document.querySelector('.player2Board').style.display = 'None'\n    const player2Ships = document.querySelectorAll('.player2Board .ship')\n    player2Ships.forEach(ship => {\n      ship.style.display = 'none'\n    })\n    document.querySelector('.player1BoardState').style.display = 'None'\n    document.querySelector('.player1Board').style.display = ''\n    document.querySelector('.player2BoardState').style.display = ''\n    document.querySelector('.nextPlayerTurn').style.display = 'none'\n    const player1Ships = document.querySelectorAll('.player1Board .ship')\n    player1Ships.forEach(ship => {\n      ship.style.display = ''\n    })\n    playerTurn = 'player1'\n  }\n}\n\nfunction startTwoPlayerGame() {\n  (0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.createPlayer1BoardState)()\n  ;(0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.createPlayer2BoardState)()\n  player1ReceiveAttackEventListiners()\n  player2ReceiveAttackEventListiners()\n  document.querySelector('.player1Area .shipyard').style.display = 'none'\n  document.querySelector('.player2Area .shipyard').style.display = 'none'\n  document.querySelector('.orientation').style.display = 'none'\n  document.querySelector('.message').textContent = `${player1name} turn`\n\n  document.querySelector('.player1Area').style.display = ''\n  document.querySelector('.player2BoardState').style = ''\n  const hideplayer2Board = document.querySelector('.player2Board')\n\n  const hideplayer1BoardState = document.querySelector('.player1BoardState')\n  const hideplayer2BoardState = document.querySelector('.player2BoardState')\n\n\n  hideplayer2Board.style.display = 'None'    // hide\n  // hideplayer2Board.style.display = ''        // display\n\n  hideplayer1BoardState.style.display = 'None'\n}\n\nfunction startPlayer1VsComputerGame() {\n  const patrolBoat2 = new _shipClass__WEBPACK_IMPORTED_MODULE_2__.Ship('Patrol Boat', 2)\n  const destroyer2 = new _shipClass__WEBPACK_IMPORTED_MODULE_2__.Ship('Destroyer', 3)\n  const battleship2 = new _shipClass__WEBPACK_IMPORTED_MODULE_2__.Ship('Battleship', 4)\n  const carrier2 = new _shipClass__WEBPACK_IMPORTED_MODULE_2__.Ship('Carrier', 5)\n\n  computerPlaceShips(patrolBoat2)\n  computerPlaceShips(destroyer2)\n  computerPlaceShips(battleship2)\n  computerPlaceShips(carrier2)\n  \n  ;(0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.createPlayer1BoardState)()\n  ;(0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.createPlayer2BoardState)()\n  document.querySelector('.player1BoardState').style.display = 'none'\n  document.querySelector('.orientation').style.display = 'none'\n  document.querySelector('.message').textContent = ''\n  const player1Shipyard = document.querySelector('.player1Area .shipyard')\n  player1Shipyard.style.display = 'none'\n  const player2Area = document.querySelector('.player2Area')\n  const player2Shipyard = player2Area.querySelector('.shipyard')\n  const player2Board = player2Area.querySelector('.player2Board')\n  const player2BoardState = player2Area.querySelector('.player2BoardState')\n\n\n  player2Area.style.display = ''\n  player2Shipyard.style.display = 'none'\n  player2Board.style.display = 'none'\n\n  const player2ReceiveAttackCells = document.querySelectorAll('.player2BoardState .cell')\n  player2ReceiveAttackCells.forEach( (cell) => {\n    cell.addEventListener('click', () => {\n      let cellNumber = parseInt(cell.classList[0].match(/\\d+/g))\n      console.log(cellNumber)\n      let receiveAttackCoordinate = (0,_gameboard_UI__WEBPACK_IMPORTED_MODULE_1__.getCoordinate)(cellNumber)\n      console.log(receiveAttackCoordinate)\n      let hitOrMiss = player2.gameboard.receiveAttack(receiveAttackCoordinate[0], receiveAttackCoordinate[1])\n      markAttackOnBoard('player2',hitOrMiss, receiveAttackCoordinate[0], receiveAttackCoordinate[1])\n      console.log(hitOrMiss)\n      if (player2.gameboard.allShipsSunk() == 'All ships sunk') {\n        console.log('Player 1 Won')\n        document.querySelector('.message').textContent = `${player1name} Won`\n        deactiveComputerCells()\n      }\n      else {\n        computerTurn()\n      }\n    }, {once: true})\n  })\n}\n\nfunction computerTurn() {\n  // keeping track of board state so it doesn't reuse co-ordinates\n  const emptyCells = []\n\n  for (let i = 0; i < 10; i++) {\n    for (let j = 0; j < 10; j++) {\n      if (player1.gameboard.boardState[i][j] == null) {\n        emptyCells.push([i, j])\n      }\n    }\n  }\n\n  console.log(emptyCells)\n\n  const randomIndex = Math.floor(Math.random() * emptyCells.length)\n  let attackCoordinates = emptyCells[randomIndex]\n  console.log(attackCoordinates)\n  let [vertical, horizontal] = attackCoordinates\n  console.log(vertical, horizontal)\n\n  let hitOrMiss = player1.gameboard.receiveAttack(vertical, horizontal)\n  console.log(player1.gameboard.boardState)\n  // document.querySelector('.player2Board').style.display = 'None'\n  document.querySelector('.player1BoardState').style.display = 'None'\n  document.querySelector('.player1Board').style.display = ''\n  // document.querySelector('.player2BoardState').style.display = ''\n  markAttackOnBoard('player1', hitOrMiss, vertical, horizontal)\n  // stop playing after 'all ships sunk returned'\n  // player1.gameboard.allShipsSunk()\n  if (player1.gameboard.allShipsSunk() == 'All ships sunk') {\n      console.log('Player 2 Won')\n      document.querySelector('.message').textContent = `Computer Won`\n    deactiveComputerCells()\n  }\n\n  // let vertical = Math.floor(Math.random() * 10)\n  // let horizontal = Math.floor(Math.random() * 10)\n\n}\n\nfunction computerPlaceShips(ship) {\n\n  let shipPlaced = false\n\n  while(!shipPlaced) {\n      // generate 1 or 2\n      let randomPlacement = Math.floor(Math.random() * (2 - 1 + 1)) + 1\n\n      // generate numbers between 0 & 9 inclusive\n      let verticalStart = Math.floor(Math.random() * (9 - 0 + 1)) + 0\n\n      let horizontalStart = Math.floor(Math.random() * (9 - 0 + 1)) + 0\n      // Vertical placement = 1\n      if (randomPlacement == 1) {\n          // if statement to check if there's enough space on the board\n          let verticalEnd = verticalStart + ship.length - 1\n          let horizontalEnd = horizontalStart\n          let placement = player2.gameboard.placeShip(ship, verticalStart, horizontalStart, verticalEnd, horizontalEnd, 'player2')\n          if (placement == `${ship.name} placed`) {\n              shipPlaced = true\n          }\n      }\n      // Horizontal placement = 2\n      else if (randomPlacement == 2) {\n          let horizontalEnd = horizontalStart + ship.length - 1\n          let verticalEnd = verticalStart\n          let placement = player2.gameboard.placeShip(ship, verticalStart, horizontalStart, verticalEnd, horizontalEnd, 'player2')\n          if (placement == `${ship.name} placed`) {\n              shipPlaced = true\n          }\n      }\n\n  }\n}\n\n\nfunction markAttackOnBoard(player, hitOrMiss,vertical, horizontal) {\n  // Computer\n    if (player == 'player1') {\n      const board = document.querySelector('.player1Board')\n      const boardState = document.querySelector('.player1BoardState')\n      console.log(board.childElementCount)\n      console.log(board.querySelector(`.cell${vertical}${horizontal} > div`))\n      if (board.querySelector(`.cell${vertical}${horizontal} > div`) != null) {\n        const cellWithAppendedShip = board.querySelector(`.cell${vertical}${horizontal} > div`) \n        const textCell = document.createElement('div')\n        textCell.textContent = '•'\n        cellWithAppendedShip.appendChild(textCell)\n      }\n      else {\n        board.querySelector(`.cell${vertical}${horizontal}`).textContent += '•'\n      }\n      boardState.querySelector(`.cell${vertical}${horizontal}`).textContent += '•'\n      if (hitOrMiss == 'Hit') {\n        let cell = board.querySelector(`.cell${vertical}${horizontal}`)\n        let cellState = boardState.querySelector(`.cell${vertical}${horizontal}`)\n        cell.classList.add('hit')\n        cellState.classList.add('hit')\n      }\n      else if (hitOrMiss == 'Miss') {\n        let cell = board.querySelector(`.cell${vertical}${horizontal}`)\n        let cellState = boardState.querySelector(`.cell${vertical}${horizontal}`)\n        cell.classList.add('miss')\n        cellState.classList.add('miss')\n      }\n      else {\n        // Show ship that was sunk on board\n        // retrieve ship name\n        hitOrMiss = hitOrMiss.replace(' sunk', '')\n        console.log(hitOrMiss)\n        let ships = player1.gameboard.ships\n        let length\n        console.log(ships)\n        for (const ship of ships) {\n          if (ship.name == hitOrMiss) {\n            length = ship.length\n          }\n        }\n        console.log(length)\n\n        for (let i = 0; i < 10; i++) {\n          for (let j = 0; j < 10; j++) {\n            if (player1.gameboard.board[i][j] != null) {\n              // console.log(player1.gameboard.board[i][j].name)\n              if (player1.gameboard.board[i][j].name == hitOrMiss) {\n                console.log(player1.gameboard.board[i][j].name)\n                console.log(`${i}${j}`)\n                // const player1BoardState = document.querySelector('.player1Board')\n                const cell = board.querySelector(`.cell${i}${j}`)\n                const cellState = boardState.querySelector(`.cell${i}${j}`)\n                const explodeIcon = document.createElement('i')\n                explodeIcon.classList.add('fa-solid')\n                explodeIcon.classList.add('fa-explosion')\n                const explodeIcon2 = explodeIcon.cloneNode(true)\n                cell.classList.add('hit')\n                cellState.classList.add('hit')\n                cell.classList.add('destroyed')\n                cellState.classList.add('destroyed')\n                // console.log(cell)\n                cell.textContent = ''\n                cellState.textContent = ''\n                console.log(cell)\n                console.log(explodeIcon)\n                cell.appendChild(explodeIcon)\n                cellState.appendChild(explodeIcon2)\n                }\n              }\n            }\n          }\n \n      }\n    }\n    else if (player == 'player2') {\n      const board = document.querySelector('.player2Board')\n      const boardState = document.querySelector('.player2BoardState')\n      if (board.querySelector(`.cell${vertical}${horizontal} > div`) != null) {\n        const cellWithAppendedShip = board.querySelector(`.cell${vertical}${horizontal} > div`) \n        const textCell = document.createElement('div')\n        textCell.textContent = '•'\n        cellWithAppendedShip.appendChild(textCell)\n      }\n      else {\n        board.querySelector(`.cell${vertical}${horizontal}`).textContent += '•'\n      }\n      boardState.querySelector(`.cell${vertical}${horizontal}`).textContent += '•'\n      if (hitOrMiss == 'Hit') {\n        let cell = board.querySelector(`.cell${vertical}${horizontal}`)\n        let cellState = boardState.querySelector(`.cell${vertical}${horizontal}`)\n        cell.classList.add('hit')\n        cellState.classList.add('hit')\n      }\n      else if (hitOrMiss == 'Miss') {\n        let cell = board.querySelector(`.cell${vertical}${horizontal}`)\n        let cellState = boardState.querySelector(`.cell${vertical}${horizontal}`)\n        cell.classList.add('miss')\n        cellState.classList.add('miss')\n      }\n      else {\n        // Show ship that was sunk on board\n        // retrieve ship name\n\n        hitOrMiss = hitOrMiss.replace(' sunk', '')\n        console.log(hitOrMiss)\n        let ships = player2.gameboard.ships\n        let length\n        console.log(ships)\n        for (const ship of ships) {\n          if (ship.name == hitOrMiss) {\n            length = ship.length\n          }\n        }\n        console.log(length)\n\n        for (let i = 0; i < 10; i++) {\n          for (let j = 0; j < 10; j++) {\n            if (player2.gameboard.board[i][j] != null) {\n              // console.log(player2.gameboard.board[i][j].name)\n              if (player2.gameboard.board[i][j].name == hitOrMiss) {\n                console.log(player2.gameboard.board[i][j].name)\n                console.log(`${i}${j}`)\n                // const player1BoardState = document.querySelector('.player1Board')\n                const cell = board.querySelector(`.cell${i}${j}`)\n                const cellState = boardState.querySelector(`.cell${i}${j}`)\n                // could create icon here\n                const explodeIcon = document.createElement('i')\n                explodeIcon.classList.add('fa-solid')\n                explodeIcon.classList.add('fa-explosion')\n                const explodeIcon2 = explodeIcon.cloneNode(true)\n                cell.classList.add('hit')\n                cellState.classList.add('hit')\n                cell.classList.add('destroyed')\n                cellState.classList.add('destroyed')\n                cell.textContent = ''\n                cellState.textContent = ''\n                console.log(cell)\n                console.log(explodeIcon)\n                cell.appendChild(explodeIcon)\n                cellState.appendChild(explodeIcon2)\n                }\n              }\n            }\n          }\n \n      }\n  }\n}\n\n//# sourceURL=webpack://modulestemplate/./src/index.js?");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Player: () => (/* binding */ Player)\n/* harmony export */ });\n/* harmony import */ var _gameboard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameboard */ \"./src/gameboard.js\");\n\n\nclass Player {\n\n    gameboard = new _gameboard__WEBPACK_IMPORTED_MODULE_0__.Gameboard(10)\n\n    constructor(name, type) {\n        this.name = name\n        this.type = type\n    }\n}\n\n// module.exports = Player\n\n//# sourceURL=webpack://modulestemplate/./src/player.js?");

/***/ }),

/***/ "./src/shipClass.js":
/*!**************************!*\
  !*** ./src/shipClass.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ship: () => (/* binding */ Ship)\n/* harmony export */ });\nclass Ship {\n\n    numberOfHits = 0\n    sunk = false\n\n    constructor(name, length) {\n        this.name = name\n        this.length = length\n    }\n\n    hit() {\n        this.numberOfHits++\n        return this.isSunk()\n    }\n    isSunk() {\n        if (this.numberOfHits == this.length) {\n            this.sunk = true\n            return `${this.name} sunk`\n        }\n        else {\n            return 'Hit'\n        }\n    }\n}\n\n// module.exports = Ship\n\n//# sourceURL=webpack://modulestemplate/./src/shipClass.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;